FORMAT: 1A

# udder
Udder API is a *content management* service for Udder CMS.
Loosely based on _application/vnd.mason+json_ media type.

NOTE: This document is a **work in progress**.

##Allowed HTTPs requests:

- `POST` - Creates or updates a resource
- `PUT` - Updates a resource
- `GET` - Retrieves a resource or list of resources
- `DELETE` - Delete a resource

##Typical Server Responses

- 200 `OK` - The request was successful (some API calls may return 201 instead).
- 201 `Created` - The request was successful and a resource was created.
- 204 `No Content` - The request was successful but there is no representation to return (that is, the response is empty).
- 400 `Bad Request` - The request could not be understood or was missing required parameters.
- 401 `Unauthorized` - Authentication failed or user does not have permissions for the requested operation.
- 403 `Forbidden` - Access denied.
- 404 `Not Found` - Resource was not found.
- 405 `Method Not Allowed` - Requested method is not supported for the specified resource.
- 429 `Too Many Requests` - Exceeded GoodData API limits. Pause requests, wait one minute, and try again. 
- 503 `Service Unavailable` - The service is temporary unavailable (e.g. scheduled Platform Maintenance). Try again later.

## Main endpoint [/]
### Get main information [GET]
Main endpoint is reserved for redirection purposes only.
The workflow should follow a following pattern:

----
 - User requests the `/` endpoint
 - If user is in **super** group then the *start* link will contain the link to 'projectStacks' and the @links array will include
    the link to request top super users and *possibly* user settings  
 - If user is not in a **super** group the *start* link will point at his *projectStack* root
 - Client MAY choose to follow the start link if the UI for the `/` is not present
 - Clients MAY implement a *dashboard* UI state where they can combine the information by manually requesting data from the present links

----


+ Request bySuperUser (application/json)
    + Headers
        
            Authorization: Bearer superusertoken

+ Response 200
    + Body
    
        ```js
            {
                "@namespaces":{
                "ud":{
                    "name": "http://udder.wearegoat.uk/reltypes"
                    }   
                },
                "@meta": {
                    "@name": "Udder API",
                    "@description": "This is Udder API. Check out where you can go. 
                    This is the super route. Hope you know what you're doing"
                
                },
                "@links": {
                    "self": { "href": "http://udder.wearegoat.uk/", "title": "Udder" },
                    "start": { "href": "http://udder.wearegoat.uk/projects-stacks", "title": "Projects stacks" }

                    "ud:superUsers": { "href": "http://udder.wearegoat.uk/users", "title": "Super Users" },
                    "ud:projectStacks": { "href": "http://udder.wearegoat.uk/projects-stacks", "title": "Projects stacks" }
                    "ud:settings": { "href": "http://udder.wearegoat.uk/settings", "title": "Settings" },
                }
            }
        ```

+ Request byUser (application/json)
    + Headers
        
            Authorization: Bearer usertoken

+ Response 200
    + Body
    
        ```js
            {
                "@namespaces":{
                "ud":{
                    "name": "http://udder.wearegoat.uk/reltypes"
                    }   
                },
                "@meta": {
                    "@name": "Udder API",
                    "@description": "This is Udder API. Check out where you can go"
                
                },
                "@links": {
                    "self": { "href": "http://udder.wearegoat.uk/", "title": "Udder" },
                    "start": { "href": "http://udder.wearegoat.uk/1/projects", "title": "Projects" }

                    "ud:users": { "href": "http://udder.wearegoat.uk/1/users", "title": "Users" },
                    "ud:projects": { "href": "http://udder.wearegoat.uk/1/projects", "title": "Projects" }
                    "ud:settings": { "href": "http://udder.wearegoat.uk/settings", "title": "Settings" },
                }
            }
        ```
        
## Super user collection [/users]
Collection of super users for the platform.
It is only accessible if the user has a 'super' role. 
It should present the list of available top endpoint actions to the admin user
as well as top endpoint to get information.

    
+ Request bySuperUser (application/json)
    + Headers
        
            Authorization: Bearer superusertoken
    
+ Response 200
    

# Group Projects
Project related resources

## Project [/{projectStackId}/projects/{projectId}]
Single project

---  
**Project attributes:**  
   
- _id `(ObjectId)` : unique identifier.
- name `(String)` : Project name.  
- description `(String)` : Project description.
- author `(String)` : Project author
- data `(Object)` : Additional project data.
- meta `(Array)` : Metadata 
- gaCode `(String)` : Google analytics code
- @render `(Object)`: An object that contains information for clients on how to render. Depends on Prefer header and defaults to 'web'.
 Possible options: 'web' (web client), 'verbose'(udder content manager), 'mobile'(any specific render directives for mobile)
   
---  

+ Model

    ```js
        {
            "@namespaces":{
            "ud":{
                "name": "http://udder.wearegoat.uk/reltypes"
                }
            },
            "@meta": {
                "@name": "Project",
                "@description": "Project section. Contains narratives and collections of the project"
                
            },
            "_id": "1",
            "name": "Fish4Tomorrow",
            "description": { "value": "Website for fish4tomorrow", "prompt": "Default description" },
            "author": { "value": "Fish4tomorrow", "prompt": "Website owner" },
            "gaCode": { "value": "11223-4545-323", "prompt": "Google analytics code" },
            "meta": [
                {
                    "fbAdmins": {
                        "value": "fb:admins value",
                        "prompt": "Facebook id",
                        "@render": {
                            "attr": "property"
                        }
                    },
                    
                    "author": {
                        "value": "Fish4Tomorrow",
                        "prompt": "Author",
                        "@render": {
                            "attr": "name"
                        }
                    },
                    
                    "twitterProjectHandle": {
                        "value": "",
                        "prompt": "Twitter handle",
                        "@render": {
                            "attr": "name"
                        },
                    },
                    
                    "twitterCreatorHandle": {
                        "value": "",
                        "prompt": "Twitter creator",
                        "@render": {
                            "attr": "name"
                        }

                    },
                }
            ]
            
            "@links": [
                {"rel": "self", "href": "http://udder.wearegoat.uk/projects/1", "title": "Project details" },
                {"rel": "start", "href": "http://udder.wearegoat.uk/projects/1/narratives", "title": "Projects" }
                {"rel": "up", "href": "http://udder.wearegoat.uk/projects", "title": "Projects" },

                {"rel": "ud:narratives", "href": "http://udder.wearegoat.uk/projects/1/narratives", "title": "Project narrative collections" },
                {"rel": "ud:users", "href": "http://udder.wearegoat.uk/users", "title": "Users" },
                {"rel": "ud:settings", "href": "http://udder.wearegoat.uk/settings", "title": "Settings" },
            ],
            
            "@render": {
                "type": [ "card", "project", "details" ]
            },

            "@actions": [
                "ud:delete": {
                    "type": "application/json",
                    "href": "http://udder.wearegoat.uk/projects/1",
                    "method": "DELETE",
                    "prompt": "Delete project",
                }
                "ud:modify": {
                    "type": "application/json-patch+json",
                    "href": "http://udder.wearegoat.uk/projects/1",
                    "method": "PATCH",
                    "prompt": "Modify project",
                    "template": [
                        {
                            "name": "title", 
                            "value": "",
                            "prompt": "Project title",
                            "@render": {
                                "type": "text",
                                "valid": [
                                    { "required": true },
                                    { "maxlength": 15 },
                                    { "autocomplete": false }
                                ]
                            }
                        },
                        {
                            "name": "description", 
                            "value": "", 
                            "prompt": "Project description",
                            "@render": {
                                "type": "text",
                                "valid": [
                                    { "required": true },
                                    { "maxlength": 15 },
                                    { "autocomplete": false }
                                ]
                            }
                        },
                        {
                            "name": "gaCode",
                            "value": "",
                            "prompt": "Google analytics code",
                            "@render":{
                                "type": "text",
                                "valid": [
                                    { "required": false },
                                    { "maxlength": 15 },
                                    { "autocomplete": false }
                                ]
                            }
                        },
                        {
                            "name": "author",
                            "value": "",
                            "prompt": "Author",
                            "type": "text",
                            "valid": [
                                { "required": false },
                                { "autocomplete": false }
                            ]
                        },
                        {
                            "name": "fbAdmins",
                            "value": "",
                            "prompt": "Facebook admin",
                            "type": "text",
                            "valid": [
                                { "required": false },
                                { "autocomplete": false }
                            ]
                        },
                        {
                            "name": "twitterProjectHandle",
                            "value": "",
                            "prompt": "Twitter project handle",
                            "type": "text",
                            "valid": [
                                { "required": false },
                                { "autocomplete": false }
                            ]
                        },
                        {
                            "name": "twitterCreatorHandle",
                            "value": "",
                            "prompt": "Twitter creator handle",
                            "type": "text",
                            "valid": [
                                { "required": false },
                                { "autocomplete": false }
                            ]
                        }
                    ]
                }
            ]
        }
    ```

### Get a project [GET]
Get a project for a certain **projectId**

+ Parameter
    + projectStackId (required, string, `1`) ... Project Stack Id
    + projectId (required, string, `1`) ... The id of the project


+ Request (application/json)

+ Response 200

    [Project][]

### Modify a project [PATCH]
Modify a project. Using PATCH method we can modify specific fields. 
Reponse doesn't return the modified project. However it returns *Content-Location* headers
that the client can use in case it needs the modified project.
Updating the view after PATCH is discouraged though. If there is a change to the same document 
that was done by someone else then as a result of your PATCH operation there is a possibility
that you going to see someone elses changes. This is potentially confusing.

+ Parameter
    + projectStackId (required, string, `1`) ... Project Stack Id

+ Request (application/json-patch+json)

    + Body
        
        ```js
            [{ "op": "add", "path": "/name/value", "value": "Changed name" },
            { "op": "add", "path": "/description/value", "value": "Changed description" },
            { "op": "add", "path": "/meta/0/fb/admins/value", "value": "Changed fb value" }
           ]
        ```
        
+ Response 204 (application/json)
    + Headers
    
            Content-Location: http://udder.wearegoat.com/projects/1

### Delete project [DELETE]
+ Parameter
    + projectStackId (required, string, `1`) ... Project Stack Id

+ Request (application/json)

+ Response 204
   
## Projects collection [/{projectStackId}/projects]
Projects collection is the root endpoint for users 
who have more than one project associated with them.

+ Model (application/json)

    ```js
        {
            "@namespaces":{
            "ud":{
                "name": "http://udder.wearegoat.uk/reltypes"
                }
            },
            "@meta": {
                "@title": "Project List",
                "@description": "List of all projects."
            },
            "projects": [
                {
                    "_id": "1",
                    "name": "Fish4Tomorrow",
                    "description": "Website for fish4tomorrow",
                    "@render": {
                        "type": ["card", "project"]
                    },
                    "@links": {
                        "self": { "href": "http://udder.wearegoat.uk/projects/1", "title": "Project details" },
                        "ud:narratives": { "href": "http://udder.wearegoat.uk/projects/1/narratives", "title": "Project narrative collections" }
                    }
                },
                {
                    "_id": "1",
                    "name": "Fish4Tomorrow",
                    "description": "Website for fish4tomorrow",
                    "@render": {
                        "type": ["card", "project"]
                    },
                    "@links": {
                        "self": { "href": "http://udder.wearegoat.uk/projects/1", "title": "Project details" },
                        "ud:narratives": { "href": "http://udder.wearegoat.uk/projects/1/narratives", "title": "Project narrative collections" }
                    }
                },
            ],
            "@links": [
                {"rel": "self", "href": "http://udder.wearegoat.uk/projects", "title": "Projects" },
                {"rel": "ud:users", "href": "http://udder.wearegoat.uk/users", "title": "Users" },
                {"rel": "ud:settings", "href": "http://udder.wearegoat.uk/settings", "title": "Settings" },
                {"rel": "start", "href": "http://udder.wearegoat.uk/projects/1", "title": "Projects" }
            ]
            "@actions": {
                "ud:create": {
                    "type": "json",
                    "href": "http://udder.wearegoat.uk/projects",
                    "method": "POST",
                    "prompt": "Create new project",
                    "template": [
                        {
                            "name": "title", 
                            "value": "", 
                            "prompt": "New project title", 
                            "@render": {
                                "type": "text",
                                "valid": [
                                    { "required": true },
                                    { "maxlength": 15 },
                                    { "autocomplete": false }
                                ]
                            }
                        },
                        {
                            "name": "description", 
                            "value": "", 
                            "prompt": "New project description", 
                            "@render": {
                                "type": "textarea",
                                "valid": [
                                    { "required": true },
                                    { "autocomplete": false }
                                ]
                            }
                        },
                        {
                            "name": "gaCode",
                            "value": "",
                            "prompt": "Google analytics code",
                            "type": "text",
                            "valid": [
                                { "required": false },
                                { "maxlength": 15 },
                                { "autocomplete": false }
                            ]
                        },
                        {
                            "name": "author",
                            "value": "",
                            "prompt": "Author",
                            "type": "text",
                            "valid": [
                                { "required": false },
                                { "autocomplete": false }
                            ]
                        },
                        {
                            "name": "fbAdmins",
                            "value": "",
                            "prompt": "Facebook admin",
                            "type": "text",
                            "valid": [
                                { "required": false },
                                { "autocomplete": false }
                            ]
                        },
                        {
                            "name": "twitterProjectHandle",
                            "value": "",
                            "prompt": "Twitter project handle",
                            "type": "text",
                            "valid": [
                                { "required": false },
                                { "autocomplete": false }
                            ]
                        },
                        {
                            "name": "twitterCreatorHandle",
                            "value": "",
                            "prompt": "Twitter creator handle",
                            "type": "text",
                            "valid": [
                                { "required": false },
                                { "autocomplete": false }
                            ]
                        }
                    ]
                }
            }
        }
    ```

### Get all projects [GET]
    
+ Parameter
    + projectStackId (required, string, `1`) ... Project Stack Id
            
+ Request (application/json)

+ Response 200

    [Projects collection][]

### Create a project [POST]
+ Parameter
    + projectStackId (required, string, `1`) ... Project Stack Id

+ Request (application/json)

    + Body
    
        ```js
            {
                "name": "Fish4Tomorrow",
                "description": "Website for fish4tomorrow"
            }
        ```

+ Response 201

    [Project][]

## Project stack [/{projectStackId}]
A stack combining projects and users who can edit those projects

+ Model (application/json)
    + Body
    ```js
        {
            "@namespaces":{
            "ud":{
                "name": "http://udder.wearegoat.uk/reltypes"
                }
            },
            
            "@meta": {
                "@name": "Project stack",
                "@description": "A stack of projects."
            },
            
            "@render": {
                "type": ["card", "project-stack", "details"]
            }
            
            "_id": "1",
            "name": "Fish4Tomorrow",
            "description": "Stack for fish4tomorrow",
            
            "@links": [
                {"rel": "self", "href": "http://udder.wearegoat.uk/projects-stacks/1", "title": "Fish4tomorrow" },
                {"rel": "ud:users", "href": "http://udder.wearegoat.uk/project-stack/1/users", "title": "Users" },
                {"rel": "ud:projects", "href": "http://udder.wearegoat.uk/projects-stack/1/projects", "title": "Projects" }
                {"rel": "start", "href": "http://udder.wearegoat.uk/projects-stack/1/projects", "title": "Projects" }
            ],
        }
    ```
    
### Get project stack details [GET]

+ Parameter
    + projectStackId (required, string, `1`) ... Project Stack Id

+ Request (application/json)


+ Response 200
    [Project stack][]

# Group Narratives
Narrative related resources of the **Udder API**

## Narrative Collection [/{projectId}/narratives]

+ Model (application/json)
    + Body
    ```
    {
        "collection": { 
            "version": "1.0",
            "href": {"rel":"self", "href": "http://udder.wearegoat.uk/narratives", "prompt": "Udder"},
            "links": [
                {"rel": "users", "href": "http://udder.wearegoat.uk/users", "prompt": "Users"},
                {"rel": "narratives", "href": "http://udder.wearegoat.uk/narratives", "prompt": "Narratives"},
                {"rel": "users", "href": "http://udder.wearegoat.uk/users", "prompt": "Users"}
            ],
            "properties": {
                "_id": "12",
                
            }
               
        }
    }
    ```
    
### Get all narratives of a project [GET]

+ Parameter
    + projectId (required, string) ... Project Id

+ Request (application/json)


+ Response 200
    
    [Narrative Collection][]


+ Response 400 (application/json)
    + Body
    
            {"error": "blabla"}
    
        

